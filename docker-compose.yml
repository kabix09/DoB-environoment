version: '3'

networks:
    symfony-network:

services:

    nginx-service:
        image: nginx:latest
        container_name: nginx-container
        ports:
            - "8080:80"
        volumes:
            - ${PROJECT_ROOT}:/var/www/project
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php74-service
            - php74-consume-service
            #- mysql8-service
            - redis-service
            #- rabbitmq39-service
            - mercure-service
        networks:
            - symfony-network
        labels:
            - "traefik.http.routers.nginx-service.rule=Host(`danceofblades.localhost`)"
            - "traefik.http.services.nginx-service.loadbalancer.server.port=80"
            - "traefik.enable=true"

    php74-service:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        container_name: php74-container
        volumes:
            - ${PROJECT_ROOT}:/var/www/project
            #- ${PHPFPM_PATH_CONF_FOLDER}/:/scripts/
        networks:
            - symfony-network
        labels:
            - "traefik.http.routers.php74-service.rule=Host(`php.localhost`)"
            - "traefik.http.services.php74-service.loadbalancer.server.port=9000"
            - "traefik.enable=true"
        depends_on:
            - redis-service
            - rabbitmq39-service
            - mssql-service

    php74-consume-service:
        build:
            context: ./docker/php-consume
            dockerfile: Dockerfile
        container_name: php74-consume-container
        volumes:
            - ${PROJECT_ROOT}:/var/www/project
            - ${PHPFPM_PATH_CONF_FOLDER}:/scripts
        networks:
            - symfony-network
        #restart: on-failure 
        depends_on:
          - redis-service
          - rabbitmq39-service
          - mssql-service

    redis-service:
        image: redis
        container_name: redis-container
        ports:
            - "6379:6379"
        networks:
            - symfony-network
        labels:
            - "traefik.http.routers.redis-service.rule=Host(`redis.localhost`)"
            - "traefik.http.services.redis-service.loadbalancer.server.port=6379"
            - "traefik.enable=true"
        command: >
             --requirepass ${REDIS_PASS} 
     
    rabbitmq39-service:
        image: rabbitmq:3.9.2-management
        container_name: rabbitmq39-container
        ports:
            - "5672:5672"
            - "15672:15672" # for RabbitMQ UI
        networks:
            - symfony-network
        restart: on-failure 
        labels:
            - "traefik.http.routers.rabbitmq39-service.rule=Host(`rabbitmq.localhost`)"
            - "traefik.http.services.rabbitmq39-service.loadbalancer.server.port=5672"
            - "traefik.enable=true"
    
    # https://github.com/lando/lando/issues/2661
    # https://stackoverflow.com/questions/57252318/symfony-4-and-mercure-with-docker-couldnt-connect-to-server
    mercure-service:
        image: dunglas/mercure
        container_name: mercure-container
        restart: unless-stopped
        environment:
            ALLOW_ANONYMOUS: 1
            PUBLISH_ALLOWED_ORIGINS: '*'
            CORS_ALLOWED_ORIGINS: '*'
            #SERVER_NAME: localhost
            MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_KEY}
            MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_KEY}
        ports:
            - 3000:3000
            #- "443:443" # for https 
        #volumes:
        #    - ./mercure/caddy_data:/data
        #    - ./mercure/caddy_config:/config
        volumes:
            - ./docker/mercure/Caddyfile:/etc/caddy/Caddyfile
            - ./docker/mercure/Caddyfile.dev:/etc/caddy/Caddyfile.dev
        networks:
            - symfony-network
        labels:
            - "traefik.http.routers.mercure-service.rule=Host(`mercure.localhost`)"
            - "traefik.http.services.mercure-service.loadbalancer.server.port=3000"
            - "traefik.enable=true"
        command: caddy run -config /etc/caddy/Caddyfile.dev

    memcached-service:
        image: memcached:alpine
        container_name: memcached-service

    mailhog-service:
        image: mailhog/mailhog:latest
        container_name: mailhog-service
        ports:
            - 1025:1025     # for connection
            - "8001:8025"   # for MailHog UI in browser
        labels:
            - "traefik.http.routers.mailhog-service.rule=Host(`mailhog.localhost`)"
            - "traefik.http.services.mailhog-service.loadbalancer.server.port=8025"
            - "traefik.enable=true"
        networks:
            - symfony-network
        volumes:
            - //var/run/docker.sock:/var/run/docker.sock

    mssql-service:
        build:
            context: ./docker/mssql
            dockerfile: Dockerfile
        container_name: mssql2019-container
        restart: on-failure
        ports:
            - "1433:1433"
        networks:
            - symfony-network
        environment:
            ACCEPT_EULA: Y
            SA_PASSWORD: saPassword12
        labels:
            - "traefik.http.routers.mssql-service.rule=Host(`mssql.localhost`)"
            - "traefik.http.services.mssql-service.loadbalancer.server.port=1433"
            - "traefik.enable=true"
    
    traefik2-service:
        image: traefik:v2.5
        container_name: traefik2-container
        command:
            --api.insecure=true
            --providers.docker
            --providers.docker.exposedByDefault=false
            --providers.docker.network=internal
        ports:
            - "8000:8000"
            - ${TRAEFIK_PORT_DASHBOARD}:8080
        networks:
            - symfony-network
        volumes:
            - //var/run/docker.sock:/var/run/docker.sock

    samba-service:
        image: dperson/samba:latest
        container_name: samba-server-container
        ports:
            - "139:139"
            - "446:445"
        networks:
            - symfony-network
        volumes:
            - ./docker/samba/smb.conf:/etc/samba/smb.conf
            - ./src/danceofblades/public/uploads:/usr/local/share/uploads
